{"version":3,"sources":["hooks/useHttpClient.js","components/error/ErrorModal.js","../node_modules/@material-ui/icons/LockOpen.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/TextField/TextField.js","components/formelements/Button.js","components/pages/Login.js"],"names":["useHttpClient","initialState","useState","state","setstate","isLoading","setisLoading","error","setError","open","setOpen","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","borderRadius","width","background","shadows","spacing","ErrorModal","props","classes","React","modalStyle","style","className","id","onClose","handleClose","aria-labelledby","aria-describedby","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","FormHelperText","ref","children","_props$component","component","Component","other","disabled","filled","focused","margin","required","variant","_objectWithoutProperties","muiFormControl","useFormControl","fcs","formControlState","states","_extends","clsx","root","contained","marginDense","dangerouslySetInnerHTML","__html","withStyles","color","palette","text","secondary","typography","caption","textAlign","marginTop","main","marginLeft","marginRight","name","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","TextField","autoComplete","_props$autoFocus","autoFocus","_props$color","defaultValue","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","InputLabelProps","inputProps","InputProps","inputRef","label","_props$multiline","multiline","onBlur","onChange","onFocus","placeholder","_props$required","rows","rowsMax","_props$select","select","SelectProps","type","_props$variant","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","FormControl","InputLabel","htmlFor","Select","labelId","input","Button","fontsize","match","useMediaQuery","button","padding","fontFamily","fontSize","fontWeight","backgroundColor","cursor","border","transition","onClick","Login","history","useHistory","username","password","user","setuser","checked","setchecked","auth","useContext","authContext","submit","e","preventDefault","process","JSON","stringify","login","localStorage","setItem","sessionStorage","form","onSubmit","target","display","Spinner"],"mappings":"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","file":"static/js/17.969a63ca.chunk.js","sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react'\r\n\r\nconst useHttpClient = (initialState) => {\r\n    const [state, setstate] = useState(initialState)\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const activeHttpRequests = useRef([]);\r\n    const sendRequest = useCallback(\r\n       async (url, method = \"GET\", body = null, headers = {}) => {\r\n        setisLoading(true);\r\n        const httpAbortController = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortController);\r\n        try{\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortController.signal\r\n            });\r\n            const responseData = await response.json()\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortController\r\n                );\r\n\r\n                  if(!response.ok){\r\n                    throw new Error(responseData.message);\r\n                  }\r\n                  setisLoading(false);\r\n                  return responseData;\r\n        } catch(err) {\r\n            setError(err.message);\r\n            setisLoading(false);\r\n            setOpen(true);\r\n            throw err;  \r\n        }\r\n    }, []);\r\n\r\n        const clearError = () => {\r\n            setError(null);\r\n            setOpen(false);\r\n            setstate(\"\")\r\n        }\r\n\r\n        useEffect((() => {\r\n            return () => {\r\n                activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n            }\r\n        }),[])\r\n\r\n\r\n    return { isLoading, error, open, sendRequest, clearError, state } //isLoading=isLoading\r\n}\r\n\r\nexport default useHttpClient;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    transform: `translate(-50%, -50%)`,\r\n    position: 'absolute',\r\n    borderRadius:\"30px\",\r\n    width: 500,\r\n    background: \"#ED213A\",  /* fallback for old browsers */\r\n    background: \"-webkit-linear-gradient(to right, #93291E, #ED213A)\",  /* Chrome 10-25, Safari 5.1-6 */\r\n    background: \"linear-gradient(to right, #93291E, #ED213A)\", /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    color:\"white\"\r\n  },\r\n}));\r\n\r\nexport default function ErrorModal(props) {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  \r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Bir hata meydana geldi!</h2>\r\n      <p id=\"simple-modal-description\">\r\n        {props.error}\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <Modal\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n  );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z\"\n}), 'LockOpen');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst Button = (props) => {\r\n  const match = useMediaQuery(\"(max-width: 824px)\");\r\n  const yatay = useMediaQuery(\"(max-height: 350px)\");\r\n  let fontsize;\r\n  if (yatay) fontsize = \".5rem\";\r\n  else if (match) fontsize = \".9rem\";\r\n  else fontsize = \"1.3rem\";\r\n  const useStyles = makeStyles({\r\n    button: {\r\n      padding: match ? \".2rem\" : \".6rem\",\r\n      margin: \".3rem 0\",\r\n      fontFamily: \"open sans\",\r\n      fontSize: fontsize,\r\n      fontWeight: 600,\r\n      color: \"wheat\",\r\n      backgroundColor: \"#0B396F\",\r\n      borderRadius: \"1rem\",\r\n      cursor: \"pointer\",\r\n      border: \"none\",\r\n      transition: \"300ms\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#568FD4\",\r\n        color: \"black\",\r\n      },\r\n      \"&:disabled\": { backgroundColor: \"gray\", color:\"white\", cursor: \"default\"},\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <button\r\n      disabled={props.disabled}\r\n      style={props.style}\r\n      onClick={props.onClick}\r\n      type={props.type}\r\n      className={classes.button}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useContext, useState, Fragment } from \"react\";\r\nimport { authContext } from \"../../WRAPPERS/Context/myContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttpClient from \"../../hooks/useHttpClient\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"../formelements/Button\";\r\nimport \"./login.css\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport ErrorModal from \"../../components/error/ErrorModal\";\r\nimport Spinner from \"../../components/spinner/Spinner\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [user, setuser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [checked, setchecked] = useState(false);\r\n  const auth = useContext(authContext);\r\n  const { isLoading, sendRequest, open, clearError, error } = useHttpClient();\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          username: user.username,\r\n          password: user.password,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      auth.login(responseData.user.id, responseData.user.name);\r\n      // alert(responseData.message);\r\n      history.push(\"/\");\r\n      if (checked) {\r\n        localStorage.setItem(\"id\", responseData.user.id);\r\n        localStorage.setItem(\"name\", responseData.user.name);\r\n      } else {\r\n        sessionStorage.setItem(\"id\", responseData.user.id);\r\n        sessionStorage.setItem(\"name\", responseData.user.name);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  let form = (\r\n    <form id=\"login-form\" onSubmit={submit}>\r\n      <LockOpenIcon />\r\n      <TextField\r\n        required\r\n        type=\"text\"\r\n        label=\"username\"\r\n        value={user.username}\r\n        onChange={(e) => setuser({ ...user, username: e.target.value })}\r\n      />\r\n      <TextField\r\n        required\r\n        type=\"password\"\r\n        label=\"şifre\"\r\n        value={user.password}\r\n        onChange={(e) => setuser({ ...user, password: e.target.value })}\r\n      />\r\n      <div style={{ display: \"flex\", marginTop: \"1rem\" }}>\r\n        <label htmlFor=\"check\">Beni Hatırla</label>\r\n        <input\r\n          id=\"check\"\r\n          type=\"checkbox\"\r\n          checked={checked}\r\n          onChange={() => setchecked(!checked)}\r\n        />\r\n      </div>\r\n\r\n      <Button type=\"submit\">Giriş Yap</Button>\r\n      <p id=\"hesabım-yok\">şifremi unuttum</p>\r\n    </form>\r\n  );\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal open={open} handleClose={clearError} error={error} />\r\n      {isLoading && <Spinner />}\r\n      <div id=\"login-page\">{form}</div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}