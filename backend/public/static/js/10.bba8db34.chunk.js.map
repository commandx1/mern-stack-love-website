{"version":3,"sources":["components/Container/container.js","components/snackbar/Snackbar.js","components/editor/Configurations.js","components/editor/Editor.js","components/Container/PageTitle.js","components/deleteModal/deleteModal.js","components/pages/blog/nav/BlogNav.js","components/pages/blog/nav/MainFeaturedPost.js","components/pages/blog/FeaturedPosts.js","components/pages/blog/replies.js","components/pages/blog/comments.js","components/pages/blog/post.js","components/pages/blog/postsAsCategory.js","components/pages/blog/BlogPage.js"],"names":["Container","props","className","children","PositionedSnackbar","open","message","alert","onClose","Alert","elevation","variant","autoHideDuration","anchorOrigin","vertical","horizontal","key","severity","colors","color","label","hasBorder","configurations","fontColor","columns","fontBackgroundColor","fontSize","options","title","model","heading","class","view","Editor","toolbar","type","style","onInit","editor","ui","getEditableElement","parentElement","insertBefore","element","value","data","onChange","DecoupledEditor","config","PageTitle","id","DeleteModal","handleClose","deleteHandler","elementId","match","useMediaQuery","classes","makeStyles","theme","modal","display","alignItems","justifyContent","paper","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","useStyles","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","fullWidth","onClick","borderBottom","divider","toolbarTitle","flex","toolbarSecondary","overflowX","toolbarLink","flexShrink","textDecoration","Header","Fragment","Toolbar","component","isLoading","categories","length","map","section","index","to","route","path","Typography","noWrap","mainFeaturedPost","position","common","white","marginBottom","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","breakpoints","up","paddingRight","linktext","MainFeaturedPost","post","Paper","backgroundImage","image","src","alt","imageText","Grid","container","item","md","gutterBottom","paragraph","description","Link","href","linkText","root","card","height","cardDetails","overflow","cardMedia","maxHeight","ul","margin","FeaturedPost","xs","_id","CardActionArea","Card","CardContent","date","ReactHtmlParser","content","substr","Hidden","xsDown","CardMedia","process","Replies","auth","useContext","authContext","useHttpClient","sendRequest","useState","replies","setreplies","reply","setreply","openModal","setopenModal","showReplyForm","setshowReplyForm","showSnackbar","setshowSnackbar","setmessage","useEffect","a","comment","responseData","fetchComments","sendReply","JSON","stringify","kullanici","userId","username","name","res","console","log","newReply","rid","updatedData","filter","Snackbar","Spinner","split","charAt","aria-label","borderTop","paddingTop","Parser","onSubmit","e","preventDefault","getData","marginTop","Comments","comments","setcomments","cid","c","Post","showCommentForm","setShowCommentForm","setcomment","tarih","update","sendComment","newComment","imageUrl","PostsAsCategory","categoryId","posts","setposts","fetchPosts","textAlign","BlogPage","setCategories","useRouteMatch","featuredPosts","setfeaturedPosts","fetchCategories","isLoding","exact","imgText"],"mappings":"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","file":"static/js/10.bba8db34.chunk.js","sourcesContent":["import \"./container.css\";\r\nimport React from \"react\";\r\n\r\nconst Container = props => <div className=\"container\">{props.children}</div> \r\n\r\n\r\nexport default Container\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function PositionedSnackbar({ open, message, alert, onClose }) {\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        autoHideDuration={6000}\r\n        onClose={onClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        key={`top, right`}\r\n        open={open}\r\n      >\r\n        <Alert severity={alert} onClose={onClose}>{message}</Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","const colors =  [\r\n    {\r\n      color: 'hsl(0, 0%, 0%)',\r\n      label: 'Siyah'\r\n    },\r\n    {\r\n      color: 'hsl(0, 0%, 30%)',\r\n      label: 'Koyu gri'\r\n    },\r\n    {\r\n      color: 'hsl(0, 0%, 60%)',\r\n      label: 'Gri'\r\n    },\r\n    {\r\n      color: 'hsl(0, 0%, 90%)',\r\n      label: 'Açık gri'\r\n    },\r\n    {\r\n      color: 'hsl(0, 0%, 100%)',\r\n      label: 'Beyaz',\r\n      hasBorder: true\r\n    },\r\n    {\r\n      color: 'hsl(0, 75%, 60%)',\r\n      label: 'Kırmızı'\r\n    },\r\n    {\r\n      color: 'hsl(30, 75%, 60%)',\r\n      label: 'Turuncu'\r\n    },\r\n    {\r\n      color: 'hsl(60, 75%, 60%)',\r\n      label: 'Sarı'\r\n    },\r\n    {\r\n      color: 'hsl(90, 75%, 60%)',\r\n      label: 'Açık yeşil'\r\n    },\r\n    {\r\n      color: 'hsl(120, 75%, 60%)',\r\n      label: 'Yeşil'\r\n    },\r\n    {\r\n      color: 'hsl(150, 75%, 60%)',\r\n      label: 'Akuamarin'\r\n    },\r\n    {\r\n      color: 'hsl(180, 75%, 60%)',\r\n      label: 'Turkuaz'\r\n    },\r\n    {\r\n      color: 'hsl(210, 75%, 60%)',\r\n      label: 'Açık mavi'\r\n    },\r\n    {\r\n      color: 'hsl(240, 75%, 60%)',\r\n      label: 'Mavi'\r\n    },\r\n    {\r\n      color: 'hsl(270, 75%, 60%)',\r\n      label: 'Mor'\r\n    }\r\n  ]\r\n\r\n\r\nexport const configurations = \r\n    {\r\n        fontColor: {\r\n          columns: 3,\r\n          colors\r\n        },\r\n        fontBackgroundColor: {\r\n          columns: 3,\r\n          colors\r\n        },\r\n        fontSize: {\r\n          options: [\r\n            { title: \"Çok Küçük\", model: \"0.5rem\" },\r\n            { title: \"Küçük\", model: \"0.75rem\" },\r\n            { title: \"Normal\", model: \"1rem\" },\r\n            { title: \"Büyük\", model: \"1.25rem\" },\r\n            { title: \"Çok Büyük\", model: \"1.5rem\" },\r\n          ],\r\n        },\r\n        heading: {\r\n          options: [\r\n            {\r\n              model: \"paragraph\",\r\n              title: \"Paragraf\",\r\n              class: \"ck-heading_paragraph\",\r\n            },\r\n            {\r\n              model: \"heading1\",\r\n              view: \"h1\",\r\n              title: \"Başlık 1\",\r\n              class: \"ck-heading_heading1\",\r\n            },\r\n            {\r\n              model: \"heading2\",\r\n              view: \"h2\",\r\n              title: \"Başlık 2\",\r\n              class: \"ck-heading_heading2\",\r\n            },\r\n            {\r\n              model: \"heading3\",\r\n              view: \"h3\",\r\n              title: \"Başlık 3\",\r\n              class: \"ck-heading_heading3\",\r\n            },\r\n          ],\r\n        },\r\n      }\r\n","import React from \"react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport \"./editor.css\";\r\nimport { configurations } from \"./Configurations\";\r\n\r\nconst Editor = (props) => {\r\n  let toolbar;\r\n  switch (props.type) {\r\n    case \"memory\":\r\n      toolbar = [\r\n        \"heading\",\r\n        \"|\",\r\n        \"fontSize\",\r\n        \"bold\",\r\n        \"italic\",\r\n        \"fontColor\",\r\n        \"fontBackgroundColor\",\r\n        \"bulletedList\",\r\n        \"blockQuote\",\r\n        \"undo\",\r\n        \"redo\",\r\n      ];\r\n      break;\r\n    case \"poem\":\r\n      toolbar = [\r\n        \"bold\",\r\n        \"italic\",\r\n        \"fontColor\",\r\n        \"underline\",\r\n        \"undo\",\r\n        \"redo\",\r\n      ];\r\n      break;\r\n    case \"telltale\":\r\n      toolbar = [\r\n        \"heading\",\r\n        \"|\",\r\n        \"fontSize\",\r\n        \"bold\",\r\n        \"italic\",\r\n        \"fontColor\",\r\n        \"fontBackgroundColor\",\r\n        \"alignment\",\r\n        \"underline\",\r\n        \"strikeThrough\",\r\n        \"bulletedList\",\r\n        \"numberedList\",\r\n        \"blockQuote\",\r\n        \"link\",\r\n        \"undo\",\r\n        \"redo\"\r\n      ];\r\n      break;\r\n    case \"blog\":\r\n      toolbar = [\r\n        \"heading\",\r\n        \"|\",\r\n        \"fontSize\",\r\n        \"bold\",\r\n        \"italic\",\r\n        \"fontColor\",\r\n        \"fontBackgroundColor\",\r\n        \"alignment\",\r\n        \"insertTable\",\r\n        \"insertImage\",\r\n        \"underline\",\r\n        \"strikeThrough\",\r\n        \"bulletedList\",\r\n        \"numberedList\",\r\n        \"blockQuote\",\r\n        \"link\",\r\n        \"undo\",\r\n        \"redo\"\r\n      ];\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <div style={props.style}>\r\n      <CKEditor\r\n        onInit={(editor) => {\r\n          // Insert the toolbar before the editable area.\r\n          editor.ui\r\n            .getEditableElement()\r\n            .parentElement.insertBefore(\r\n              editor.ui.view.toolbar.element,\r\n              editor.ui.getEditableElement()\r\n            );\r\n        }}\r\n        value={props.value}\r\n        data={props.data}\r\n        onChange={props.onChange}\r\n        editor={DecoupledEditor}\r\n        config={{\r\n          ...configurations,\r\n          toolbar: toolbar\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport \"./container.css\";\r\n\r\nconst PageTitle = (props) => {\r\n  return <div id=\"page-title\">{props.children}</div>;\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Button, useMediaQuery } from \"@material-ui/core\";\r\nimport \"./deleteModal.css\";\r\n\r\nexport default function DeleteModal({\r\n  open,\r\n  handleClose,\r\n  deleteHandler,\r\n  elementId,\r\n  element,\r\n}) {\r\n  const match = useMediaQuery(\"(max-width: 769px)\");\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n      width: match && \"90%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">\r\n              {element} silmek istediğinize emin misiniz? 🤔\r\n            </h2>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              fullWidth\r\n              onClick={() => deleteHandler(elementId)}\r\n            >\r\n              Sil\r\n            </Button>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleClose()}\r\n            >\r\n              Vazgeç\r\n            </Button>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, Typography, Toolbar } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: \"space-between\",\r\n    overflowX: \"auto\",\r\n    backgroundColor: \"rgba(250,250,250, .5)\",\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n    textDecoration:\"none\",\r\n    color:\"#0E6EE1\",\r\n    \"& a\": {\r\n      textDecoration:\"none\",\r\n    },\r\n    \"& a:hover\": {\r\n      textDecoration: \"none\"\r\n    },\r\n    \"&:hover\":{\r\n      color:\"#4B8EDF\",\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles()\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.toolbar} />\r\n      <Toolbar\r\n        component=\"nav\"\r\n        variant=\"dense\"\r\n        className={classes.toolbarSecondary}\r\n      >\r\n        {!props.isLoading && props.categories.length > 0 &&\r\n        props.categories.map((section, index) => (\r\n          <NavLink key={index} className={classes.toolbarLink} to={`${props.route.path}/kategori/${section.label}`}>\r\n            <Typography\r\n              color=\"inherit\"\r\n              noWrap\r\n              key={section.title}\r\n              variant=\"body2\"\r\n            >\r\n              {section.label}\r\n            </Typography>\r\n          </NavLink>\r\n        ))}\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainFeaturedPost: {\r\n    position: \"relative\",\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: \"rgba(0,0,0,.4)\",\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: \"relative\",\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  linktext: {\r\n    color: \"#bababa\",\r\n    \"&:hover\": {\r\n      color: \"#f95\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MainFeaturedPost(props) {\r\n  const classes = useStyles();\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Paper\r\n      className={classes.mainFeaturedPost}\r\n      style={{ backgroundImage: `url(${post.image})` }}\r\n    >\r\n      {/* Increase the priority of the hero background image */}\r\n      {\r\n        <img\r\n          style={{ display: \"none\" }}\r\n          src={post.image}\r\n          alt={post.imageText}\r\n        />\r\n      }\r\n      <div className={classes.overlay} />\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <div className={classes.mainFeaturedPostContent}>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h3\"\r\n              color=\"inherit\"\r\n              gutterBottom\r\n            >\r\n              {post.title}\r\n            </Typography>\r\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n              {post.description}\r\n            </Typography>\r\n            <Link className={classes.linktext} variant=\"subtitle1\" href=\"#\">\r\n              {post.linkText}\r\n            </Link>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMainFeaturedPost.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root:{\r\n    '& a': {\r\n      textDecoration:'none'\r\n    },\r\n    '& a:active':{\r\n      color:\"gray\"\r\n    }\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    height: 330,\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n    overflow: \"auto\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n    maxHeight: \"100%\",\r\n    \"& img\": {\r\n      maxHeight: \"100%\",\r\n    },\r\n  },\r\n  Link: {\r\n    textDecoration: \"none\",\r\n    \"& h6\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n    \"& h6:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  ul: {\r\n    '& ul': {\r\n      width: '90%',\r\n      margin: '0 auto'\r\n    }\r\n  }\r\n});\r\n\r\nexport default function FeaturedPost({ post, image, route }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={12} md={6} className={classes.root}>\r\n      <Link to={`${route}/postId/${post._id}/Başlık/${post.title}`}>\r\n        <CardActionArea component='div'>\r\n          <Card className={classes.card}>\r\n            <div className={classes.cardDetails}>\r\n              <CardContent>\r\n                <Typography component=\"h2\" variant=\"h5\">\r\n                  {post.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {post.date}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" paragraph className={classes.ul}>\r\n                  {ReactHtmlParser(post.content.substr(0, 300))}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"primary\">\r\n                  Devamını oku...\r\n                </Typography>\r\n              </CardContent>\r\n            </div>\r\n            {image ? (\r\n              <Hidden xsDown>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image={`${process.env.REACT_APP_ASSET_URL}/${image}`}\r\n                  title={post.title}\r\n                />\r\n              </Hidden>\r\n            ) : null}\r\n          </Card>\r\n        </CardActionArea>\r\n      </Link>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect, Fragment } from \"react\";\r\nimport { authContext } from \"../../../WRAPPERS/Context/myContext\";\r\nimport Snackbar from \"../../snackbar/Snackbar\";\r\nimport Parser from \"react-html-parser\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport Editor from \"../../editor/Editor\";\r\nimport useHttpClient from \"../../../hooks/useHttpClient\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport DeleteModal from \"../../deleteModal/deleteModal\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\n\r\nconst Replies = (props) => {\r\n  const auth = useContext(authContext);\r\n  const { sendRequest, isLoading } = useHttpClient();\r\n  const [replies, setreplies] = useState([]);\r\n  const [reply, setreply] = useState(\"\");\r\n  const [openModal, setopenModal] = useState(false);\r\n  const [showReplyForm, setshowReplyForm] = useState(false);\r\n  const [showSnackbar, setshowSnackbar] = useState(false);\r\n  const [message, setmessage] = useState({\r\n    type: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/blog/replies/comment/${props.comment._id}`\r\n        );\r\n        setreplies(responseData.replies);\r\n      } catch (err) {}\r\n    };\r\n    fetchComments();\r\n  }, [props.comment._id]);\r\n\r\n  function addReply(newReply) {\r\n    setreplies([...replies, newReply]);\r\n  }\r\n\r\n  const sendReply = async () => {\r\n    try {\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/blog/replies`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          content: reply,\r\n          kullanici: auth.userId,\r\n          username: auth.name,\r\n          comment: props.comment._id,\r\n        }),\r\n        { \"Content-Type\": \"application/json\" }\r\n      );\r\n      setreply(\"\");\r\n      setshowReplyForm(false);\r\n      console.log(res);\r\n      addReply(res.reply);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const deleteHandler = async (rid) => {\r\n    setopenModal(false);\r\n    try {\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/blog/replies/${rid}`,\r\n        \"DELETE\"\r\n      );\r\n      setshowSnackbar(true);\r\n      const updatedData = replies.filter((reply) => reply._id !== rid);\r\n      setreplies(updatedData);\r\n      setmessage({\r\n        type: res.message.type,\r\n        content: res.message.content,\r\n      });\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Snackbar\r\n        onClose={() => setshowSnackbar(false)}\r\n        open={showSnackbar}\r\n        message={message.content}\r\n        alert={message.type}\r\n      />\r\n      {isLoading && <Spinner />}\r\n      {!isLoading &&\r\n        replies.length > 0 &&\r\n        replies.map((reply) => (\r\n          <div\r\n            className={\r\n              auth.name === reply.username ? \"reply-myBg\" : \"reply-yourBg\"\r\n            }\r\n            key={reply._id}\r\n          >\r\n            <DeleteModal\r\n              element=\"Cevabı\"\r\n              elementId={reply._id}\r\n              deleteHandler={deleteHandler}\r\n              open={openModal}\r\n              handleClose={() => setopenModal(false)}\r\n            />\r\n            <div className=\"reply\">\r\n              <div className=\"reply-header\">\r\n                <div style={{display:\"flex\"}}>\r\n                  <div className=\"reply-header-name\">\r\n                    {reply.username.split(\" \")[0].charAt(0) +\r\n                      reply.username.split(\" \")[1].charAt(0)}\r\n                  </div>\r\n                  {`${reply.date}`}\r\n                </div>\r\n                {auth.name === reply.username ? (\r\n                  <IconButton\r\n                    onClick={() => setopenModal(true)}\r\n                    color=\"primary\"\r\n                    aria-label=\"upload picture\"\r\n                    component=\"span\"\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                ) : null}\r\n              </div>\r\n              <div style={{ borderTop: \"1px dashed\", paddingTop: \".5rem\" }}>\r\n                {Parser(reply.content)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      {showReplyForm ? (\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            sendReply();\r\n          }}\r\n          className=\"comment-form\"\r\n        >\r\n          <Editor\r\n            data={reply}\r\n            type=\"poem\"\r\n            onChange={(e, editor) => {\r\n              const data = editor.getData();\r\n              setreply(data);\r\n            }}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Gönder\r\n          </Button>\r\n          <Button\r\n            onClick={() => setshowReplyForm(false)}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Vazgeç\r\n          </Button>\r\n        </form>\r\n      ) : (\r\n        <Button\r\n          style={{ marginTop: \".5rem\" }}\r\n          color=\"primary\"\r\n          onClick={() => setshowReplyForm(true)}\r\n          variant=\"contained\"\r\n        >\r\n          <span style={{ padding: \"0.1rem 1rem\" }}>Cevapla</span>\r\n        </Button>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Replies;\r\n","import React, { useContext, Fragment, useState } from \"react\";\r\nimport { authContext } from \"../../../WRAPPERS/Context/myContext\";\r\nimport Parser from \"react-html-parser\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport DeleteModal from \"../../deleteModal/deleteModal\";\r\nimport Snackbar from \"../../snackbar/Snackbar\";\r\nimport useHttpClient from \"../../../hooks/useHttpClient\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport Replies from \"./replies\";\r\n\r\nconst Comments = ({ comments, setcomments }) => {\r\n  const auth = useContext(authContext);\r\n  const { sendRequest, isLoading } = useHttpClient();\r\n  const [openModal, setopenModal] = useState(false);\r\n  const [showSnackbar, setshowSnackbar] = useState(false);\r\n  const [message, setmessage] = useState({\r\n    type: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const deleteHandler = async (cid) => {\r\n    setopenModal(false);\r\n    try {\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/blog/comments/${cid}`,\r\n        \"DELETE\"\r\n      );\r\n      setshowSnackbar(true);\r\n      const updatedData = comments.filter((comment) => comment._id !== cid);\r\n      setcomments(updatedData);\r\n      setmessage({\r\n        type: res.message.type,\r\n        content: res.message.content,\r\n      });\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isLoading && <Spinner />}\r\n      {comments.length > 0 &&\r\n        comments.map((c) => (\r\n          <Fragment key={c._id}>\r\n            <Snackbar\r\n              onClose={() => setshowSnackbar(false)}\r\n              open={showSnackbar}\r\n              message={message.content}\r\n              alert={message.type}\r\n            />\r\n            {c.username === auth.name ? (\r\n              <div className=\"delete-comment\">\r\n                <Button\r\n                  onClick={() => setopenModal(true)}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Yorumu Sil\r\n                </Button>\r\n              </div>\r\n            ) : null}\r\n            <div\r\n              key={c._id}\r\n              style={\r\n                {\r\n                  // textAlign: c.username === auth.name ? \"left\" : \"right\",\r\n                }\r\n              }\r\n              className={\r\n                c.username === auth.name\r\n                  ? \"post-comment myBg\"\r\n                  : \"post-comment yourBg\"\r\n              }\r\n            >\r\n              <div\r\n                className=\"comment-infos\"\r\n                style={\r\n                  c.username === auth.name\r\n                    ? { left: \"1rem\" }\r\n                    : { right: \"1rem\" }\r\n                }\r\n              >\r\n                <div className=\"comment-publisher\">{c.username}</div>\r\n                <div className=\"comment-time\">({c.date})</div>\r\n              </div>\r\n              <div className=\"comment-content\">\r\n                <div>{Parser(c.content)}</div>\r\n\r\n                <Replies comment={c} />\r\n              </div>\r\n            </div>\r\n            <DeleteModal\r\n              element=\"Yorumu\"\r\n              elementId={c._id}\r\n              deleteHandler={deleteHandler}\r\n              open={openModal}\r\n              handleClose={() => setopenModal(false)}\r\n            />\r\n          </Fragment>\r\n        ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { authContext } from \"../../../WRAPPERS/Context/myContext\";\r\nimport Container from \"../../Container/container\";\r\nimport Parser from \"react-html-parser\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport Editor from \"../../editor/Editor\";\r\nimport useHttpClient from \"../../../hooks/useHttpClient\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport Comments from \"./comments\";\r\n\r\nconst Post = ({ post }) => {\r\n  const [showCommentForm, setShowCommentForm] = useState(false);\r\n  const auth = useContext(authContext);\r\n  const { sendRequest, isLoading } = useHttpClient();\r\n  const [comments, setcomments] = useState([]);\r\n  const [comment, setcomment] = useState(\"\");\r\n  const tarih =\r\n    post.date === post.update\r\n      ? `${post.date} tarihinde yayımlandı`\r\n      : `${post.update} tarihinde güncellendi`;\r\n\r\n  const addComment = (newComment) => {\r\n    setcomments([...comments, newComment]);\r\n  };\r\n  const sendComment = async () => {\r\n    try {\r\n      const res = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/blog/comments\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          content: comment,\r\n          kullanici: auth.userId,\r\n          username: auth.name,\r\n          post: post._id,\r\n        }),\r\n        { \"Content-Type\": \"application/json\" }\r\n      );\r\n      setcomment(\"\");\r\n      setShowCommentForm(false);\r\n      addComment(res.comment);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/blog/comments/post/${post._id}`\r\n        );\r\n        setcomments(responseData.comments);\r\n      } catch (err) {}\r\n    };\r\n    fetchComments();\r\n  }, [post._id]);\r\n  return (\r\n    <Container>\r\n      {isLoading && <Spinner />}\r\n      <div className=\"selected-post-wrapper\">\r\n        <div className=\"selected-post-published\">\r\n          <div>\r\n            {post.username} tarafından {tarih}\r\n          </div>\r\n        </div>\r\n        {post.imageUrl ? (\r\n          <div className=\"post-main_image\">\r\n            <img src={process.env.REACT_APP_ASSET_URL + \"/\" + post.imageUrl} />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"selected-post-title\">{post.title}</div>\r\n\r\n        <div className=\"selected-post-content\">{Parser(post.content)}</div>\r\n        <Comments comments={comments} setcomments={setcomments} />\r\n        <div style={{ margin: \"1rem auto\" }}>\r\n          {showCommentForm ? (\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                sendComment();\r\n              }}\r\n              className=\"comment-form\"\r\n            >\r\n              <Editor\r\n                data={comment}\r\n                type=\"poem\"\r\n                onChange={(e, editor) => {\r\n                  const data = editor.getData();\r\n                  setcomment(data);\r\n                }}\r\n              />\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Gönder\r\n              </Button>\r\n              <Button\r\n                onClick={() => setShowCommentForm(false)}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Vazgeç\r\n              </Button>\r\n            </form>\r\n          ) : (\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => setShowCommentForm(true)}\r\n              variant=\"contained\"\r\n            >\r\n              <span style={{ padding: \"0.1rem 1rem\" }}>Yorum yap</span>\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useHttpClient from \"../../../hooks/useHttpClient\";\r\nimport FeaturedPost from \"./FeaturedPosts\";\r\nimport { Grid, Container } from \"@material-ui/core\";\r\n\r\nconst PostsAsCategory = ({ categoryId, route }) => {\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n  const [posts, setposts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const res = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/blog/category/${categoryId}`\r\n        );\r\n        setposts(res.posts);\r\n        console.log(res);\r\n      } catch (error) {}\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      {!isLoading && posts.length === 0 ? (\r\n        <p style={{textAlign:\"center\"}}>Bu kategoride yazılmış post bulunamadı 😢 </p>\r\n      ) : (\r\n        <Grid container spacing={4}>\r\n          {posts.map((post) => (\r\n            <FeaturedPost\r\n              route={route.path}\r\n              image={post.imageUrl}\r\n              key={post._id}\r\n              post={post}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostsAsCategory;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PageTitle from \"../../Container/PageTitle\";\r\nimport { authContext } from \"../../../WRAPPERS/Context/myContext\";\r\nimport useHttpClient from \"../../../hooks/useHttpClient\";\r\nimport \"./blogpage.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"../../Container/container\";\r\nimport BlogNav from \"./nav/BlogNav\";\r\nimport MainFeaturedPost from \"./nav/MainFeaturedPost\";\r\nimport FeaturedPost from \"./FeaturedPosts\";\r\nimport { Route, useRouteMatch } from \"react-router-dom\";\r\nimport Post from './post'\r\nimport PostsAsCategory from \"./postsAsCategory\";\r\n\r\nconst BlogPage = () => {\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n  const [categories, setCategories] = useState([]);\r\n  const auth = useContext(authContext);\r\n  const route = useRouteMatch();\r\n  const mainFeaturedPost = {\r\n    title: \"İzmir'in Ülkemizdeki En Yaşanılası Şehir Olduğunun 24 Kanıtı\",\r\n    description:\r\n      \"Herkesin aklında gerçekleştirmek için yanıp tutuştuğu bir hayal vardır: Tası tarağı toplayıp İzmir'e yerleşmek. Kimileri başarır bunu, kimileri ise asla imkan bulamaz. Bu noktada en şanslı olanlar, halihazırda İzmir'de yaşayan kişilerdir çünkü onlar bilir ki, İzmir'i harika bir şehir haline getiren onlarca özelliği var.\",\r\n    image:\r\n      \"https://ipektatil.com/wp-content/uploads/2017/12/5a1ec2540f25440f288d63a5.jpg\",\r\n    imgText: \"İzmir gece resmi\",\r\n    linkText: \"Devamını oku…\",\r\n  };\r\n\r\n  const [featuredPosts, setfeaturedPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const res = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/blog/categories\"\r\n        );\r\n        setCategories(res.categories);\r\n      } catch (error) {}\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const res = await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/blog\");\r\n        setfeaturedPosts(res.posts);\r\n      } catch (error) {}\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  return (\r\n    !isLoading &&\r\n    categories.length > 0 &&\r\n    featuredPosts.length > 0 && (\r\n      <div>\r\n        <PageTitle>Blog</PageTitle>\r\n        <BlogNav isLoding={isLoading} categories={categories} route={route} />\r\n        <Route exact path=\"/Blog\">\r\n          <MainFeaturedPost post={mainFeaturedPost} />\r\n          <Container>\r\n            <Grid container spacing={4}>\r\n              {featuredPosts.map((post) => (\r\n                <FeaturedPost\r\n                  route={route.path}\r\n                  image={post.imageUrl}\r\n                  key={post._id}\r\n                  post={post}\r\n                />\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </Route>\r\n        {categories.map((c) => (\r\n          <Route key={c._id} path={`${route.path}/kategori/${c.label}`}>\r\n            <PostsAsCategory route={route} categoryId={c._id}/>\r\n          </Route>\r\n        ))}\r\n        {featuredPosts.map((post) => (\r\n          <Route key={post._id} path={`${route.path}/postId/${post._id}`}>\r\n            <Post post={post}/>\r\n          </Route>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n"],"sourceRoot":""}